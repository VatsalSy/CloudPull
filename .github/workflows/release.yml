name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write
  id-token: write

env:
  GO_VERSION: '1.21'
  REGISTRY: ghcr.io

jobs:
  test:
    name: Test Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Run tests
        run: |
          go mod download
          go test -v -race ./...

  goreleaser:
    name: Build and Release
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Install cosign
        uses: sigstore/cosign-installer@v3

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COSIGN_EXPERIMENTAL: 1

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: dist/

  docker:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign container image
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
        run: |
          for tag in ${TAGS}; do
            cosign sign --yes ${tag}
          done

  create-release-notes:
    name: Create Release Notes
    runs-on: ubuntu-latest
    needs: [goreleaser, docker]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: ".github/changelog-config.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update release
        uses: softprops/action-gh-release@v2
        with:
          body: |
            ## Docker Images

            ```bash
            # Pull the latest image
            docker pull ${{ env.REGISTRY }}/${{ github.repository }}:${{ github.ref_name }}

            # Run CloudPull
            docker run -it --rm \
              -v ~/.cloudpull:/root/.cloudpull \
              -v ~/CloudPull:/data \
              ${{ env.REGISTRY }}/${{ github.repository }}:${{ github.ref_name }}
            ```

            ## Changelog

            ${{ steps.changelog.outputs.changelog }}

            ## Installation

            ### Homebrew (macOS/Linux)
            ```bash
            brew tap VatsalSy/CloudPull
            brew install cloudpull
            ```

            ### From Binary
            Download the appropriate binary for your platform from the assets below.

            ### From Source
            ```bash
            go install github.com/VatsalSy/CloudPull/cmd/cloudpull@${{ github.ref_name }}
            ```

            ## Verification

            All release artifacts are signed with [cosign](https://github.com/sigstore/cosign).

            To verify a release artifact:
            ```bash
            cosign verify-blob \
              --certificate-identity=https://github.com/${{ github.repository }}/.github/workflows/release.yml@${{ github.ref }} \
              --certificate-oidc-issuer=https://token.actions.githubusercontent.com \
              --signature=cloudpull-checksums.txt.sig \
              cloudpull-checksums.txt
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
